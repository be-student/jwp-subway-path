plugins {
    id 'jacoco'
    id 'java'
    id 'org.springframework.boot' version '2.7.9'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

sourceCompatibility = '11'

repositories {
    mavenCentral()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

jacocoTestReport {
    dependsOn test

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "subway/**/*Dto.*",
                    "subway/**/*Response.*",
                    "subway/**/*Request.*",
                    "**/config/*"
            ])
        }))
    }
}

jacoco {
    toolVersion = '0.8.8'
}

dependencies {
    compileOnly 'org.projectlombok:lombok'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'net.rakugakibox.spring.boot:logback-access-spring-boot-starter:2.7.1'

    implementation 'org.springframework.boot:spring-boot-starter-validation'

    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'io.rest-assured:rest-assured:4.4.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    runtimeOnly 'com.h2database:h2'
    implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'

    implementation 'org.jgrapht:jgrapht-core:1.5.2'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}
